{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  getPlots() {\n    return this.http.get(`${this.apiUrl}/plots`);\n  }\n  getPlotById(id) {\n    return this.http.get(`${this.apiUrl}/plots/${id}`);\n  }\n  addPlot(plot) {\n    return this.http.post(`${this.apiUrl}/plots`, plot);\n  }\n  updatePlot(plot) {\n    return this.http.put(`${this.apiUrl}/plots/${plot.id}`, plot);\n  }\n  deletePlot(id) {\n    return this.http.delete(`${this.apiUrl}/plots/${id}`);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiService };","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","getPlots","get","getPlotById","id","addPlot","plot","post","updatePlot","put","deletePlot","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular\\irrigation\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Plot } from './Plot.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  getPlots(): Observable<Plot[]> {\n    return this.http.get<Plot[]>(`${this.apiUrl}/plots`);\n  }\n\n  getPlotById(id: number): Observable<Plot> {\n    return this.http.get<Plot>(`${this.apiUrl}/plots/${id}`);\n  }\n\n  addPlot(plot: Plot): Observable<Plot> {\n    return this.http.post<Plot>(`${this.apiUrl}/plots`, plot);\n  }\n\n  updatePlot(plot: Plot): Observable<Plot> {\n    return this.http.put<Plot>(`${this.apiUrl}/plots/${plot.id}`, plot);\n  }\n\n  deletePlot(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/plots/${id}`);\n  }\n}\n\n"],"mappings":";;AAKA,MAGaA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAEA;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EACtD;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,UAAUI,EAAE,EAAE,CAAC;EAC1D;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACP,MAAM,QAAQ,EAAEM,IAAI,CAAC;EAC3D;EAEAE,UAAUA,CAACF,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,UAAUM,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EACrE;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,UAAUI,EAAE,EAAE,CAAC;EAC7D;;AAvBWP,UAAU,C;mBAAVA,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVlB,UAAU,C;SAAVA,UAAU;EAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPrB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}