{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api.service\";\nclass PlotEditComponent {\n  constructor(route, router, plotService) {\n    this.route = route;\n    this.router = router;\n    this.plotService = plotService;\n    this.plot = {\n      id: 0,\n      name: '',\n      area: 0,\n      location: ''\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const plotId = Number(params.get('id'));\n      this.getPlot(plotId);\n    });\n  }\n  getPlot(id) {\n    this.plotService.getPlotById(id).subscribe(plot => {\n      this.plot = plot;\n    });\n  }\n  onSubmit() {\n    this.plotService.updatePlot(this.plot).subscribe(() => {\n      this.router.navigate(['/plots']);\n    });\n  }\n}\nPlotEditComponent.ɵfac = function PlotEditComponent_Factory(t) {\n  return new (t || PlotEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n};\nPlotEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlotEditComponent,\n  selectors: [[\"app-plot-edit\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"submit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"area\"], [\"type\", \"number\", \"id\", \"area\", \"name\", \"area\", \"value\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"location\"], [\"type\", \"text\", \"id\", \"location\", \"name\", \"location\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function PlotEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Edit Plot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function PlotEditComponent_Template_form_submit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PlotEditComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.plot.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Area:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function PlotEditComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.plot.area = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PlotEditComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.plot.location = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.plot.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.plot.area);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.plot.location);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PlotEditComponent };","map":{"version":3,"names":["PlotEditComponent","constructor","route","router","plotService","plot","id","name","area","location","ngOnInit","paramMap","subscribe","params","plotId","Number","get","getPlot","getPlotById","onSubmit","updatePlot","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","ApiService","selectors","decls","vars","consts","template","PlotEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PlotEditComponent_Template_form_submit_2_listener","PlotEditComponent_Template_input_ngModelChange_6_listener","$event","PlotEditComponent_Template_input_ngModelChange_10_listener","PlotEditComponent_Template_input_ngModelChange_14_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\angular\\irrigation\\src\\app\\plot-edit\\plot-edit.component.ts","C:\\angular\\irrigation\\src\\app\\plot-edit\\plot-edit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Plot } from '../Plot.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-plot-edit',\n  templateUrl: './plot-edit.component.html',\n  styleUrls: ['./plot-edit.component.css']\n})\nexport class PlotEditComponent {\n  plot: Plot = {\n    id: 0,\n    name: '',\n    area: 0,\n    location: ''\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private plotService: ApiService\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const plotId = Number(params.get('id'));\n      this.getPlot(plotId);\n    });\n  }\n\n  getPlot(id: number) {\n    this.plotService.getPlotById(id).subscribe(plot => {\n      this.plot = plot;\n    });\n  }\n\n  onSubmit() {\n    this.plotService.updatePlot(this.plot).subscribe(() => {\n      this.router.navigate(['/plots']);\n    });\n  }\n}\n\n","<h2>Edit Plot</h2>\n\n<form (submit)=\"onSubmit()\">\n  <div>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"plot.name\" required>\n  </div>\n\n  <div>\n    <label for=\"area\">Area:</label>\n    <input type=\"number\" id=\"area\" name=\"area\" value=\"\" [(ngModel)]=\"plot.area\" required>\n  </div>\n\n  <div>\n    <label for=\"location\">Location:</label>\n    <input type=\"text\" id=\"location\" name=\"location\" [(ngModel)]=\"plot.location\" required>\n  </div>\n\n\n\n  <button type=\"submit\">Save</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}