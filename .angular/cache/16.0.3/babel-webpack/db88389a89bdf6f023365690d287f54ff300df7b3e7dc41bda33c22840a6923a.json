{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PlotAddComponent = class PlotAddComponent {\n  constructor(plotService) {\n    this.plotService = plotService;\n  }\n  onSubmit() {\n    // Check if any required field is undefined\n    if (this.plotName === undefined || this.plotSize === undefined || this.plotLocation === undefined) {\n      console.error('Please fill in all required fields');\n      return;\n    }\n    // Create a new plot object with the form values\n    const newPlot = {\n      name: this.plotName,\n      area: this.plotSize,\n      location: this.plotLocation,\n      id: 0\n    };\n    // Call the plot service to add the plot\n    this.plotService.addPlot(newPlot).subscribe(() => {\n      // Plot added successfully, perform any additional actions if needed\n      console.log('Plot added successfully');\n    }, error => {\n      // Error occurred while adding the plot, handle the error\n      console.error('Error adding plot:', error);\n    });\n    // Reset the form values\n    this.resetForm();\n  }\n  resetForm() {\n    this.plotName = undefined;\n    this.plotSize = undefined;\n    this.plotLocation = undefined;\n  }\n};\nPlotAddComponent = __decorate([Component({\n  selector: 'app-plot-add',\n  templateUrl: './plot-add.component.html',\n  styleUrls: ['./plot-add.component.css']\n})], PlotAddComponent);\nexport { PlotAddComponent };","map":{"version":3,"names":["Component","PlotAddComponent","constructor","plotService","onSubmit","plotName","undefined","plotSize","plotLocation","console","error","newPlot","name","area","location","id","addPlot","subscribe","log","resetForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\angular\\irrigation\\src\\app\\plot-add\\plot-add.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Plot } from '../Plot.model';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-plot-add',\n  templateUrl: './plot-add.component.html',\n  styleUrls: ['./plot-add.component.css']\n})\nexport class PlotAddComponent {\n  plotName?: string;\n  plotSize?: number;\n  plotLocation?: string;\n\n  constructor(private plotService: ApiService) {}\n\n  onSubmit() {\n    // Check if any required field is undefined\n    if (this.plotName === undefined || this.plotSize === undefined || this.plotLocation === undefined) {\n      console.error('Please fill in all required fields');\n      return;\n    }\n\n    // Create a new plot object with the form values\n    const newPlot: Plot = {\n      name: this.plotName,\n      area: this.plotSize,\n      location: this.plotLocation,\n      id: 0\n    };\n\n    // Call the plot service to add the plot\n    this.plotService.addPlot(newPlot).subscribe(\n      () => {\n        // Plot added successfully, perform any additional actions if needed\n        console.log('Plot added successfully');\n      },\n      (error) => {\n        // Error occurred while adding the plot, handle the error\n        console.error('Error adding plot:', error);\n      }\n    );\n\n    // Reset the form values\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.plotName = undefined;\n    this.plotSize = undefined;\n    this.plotLocation = undefined;\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUzC,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAK3BC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAAe;EAE9CC,QAAQA,CAAA;IACN;IACA,IAAI,IAAI,CAACC,QAAQ,KAAKC,SAAS,IAAI,IAAI,CAACC,QAAQ,KAAKD,SAAS,IAAI,IAAI,CAACE,YAAY,KAAKF,SAAS,EAAE;MACjGG,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;MACnD;;IAGF;IACA,MAAMC,OAAO,GAAS;MACpBC,IAAI,EAAE,IAAI,CAACP,QAAQ;MACnBQ,IAAI,EAAE,IAAI,CAACN,QAAQ;MACnBO,QAAQ,EAAE,IAAI,CAACN,YAAY;MAC3BO,EAAE,EAAE;KACL;IAED;IACA,IAAI,CAACZ,WAAW,CAACa,OAAO,CAACL,OAAO,CAAC,CAACM,SAAS,CACzC,MAAK;MACH;MACAR,OAAO,CAACS,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,EACAR,KAAK,IAAI;MACR;MACAD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;IAED;IACA,IAAI,CAACS,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACd,QAAQ,GAAGC,SAAS;IACzB,IAAI,CAACC,QAAQ,GAAGD,SAAS;IACzB,IAAI,CAACE,YAAY,GAAGF,SAAS;EAC/B;CACD;AA3CYL,gBAAgB,GAAAmB,UAAA,EAL5BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWtB,gBAAgB,CA2C5B;SA3CYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}